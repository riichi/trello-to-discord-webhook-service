name: Rust CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

env:
  CARGO_TERM_COLOR: always

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
# This will ensure that only one commit will be running tests at a time on each PR.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    # Run on external PRs and pushes to branches on the repo
    # This is to avoid double running on PRs from internal branches
    if: github.event_name == 'push' || github.event_name == 'schedule' ||
      github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        rust: [stable, nightly]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: cargo +${{ matrix.rust }} build

      - name: Test
        run: cargo +${{ matrix.rust }} test

  clippy:
    if: github.event_name == 'push' || github.event_name == 'schedule' ||
      github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - name: Run clippy
        run: cargo clippy -- -Dclippy::all

  rustfmt:
    if: github.event_name == 'push' || github.event_name == 'schedule' ||
      github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Run fmt
        run: cargo fmt --all -- --check
